/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package atu;

import atu.Class.ConnectionDB;
import atu.StudentFrames.StudentFrame;
import atu.TeacherFrames.TeacherFrame;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;

/**
 *
 * @author alber
 */
public class LoginFrame extends javax.swing.JFrame {

    /**
     * Creates new form LoginFrame
     */
    public LoginFrame() {
        initComponents();
    }

    LoginFrame(String progress_Bar_Example) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        studentRB = new javax.swing.JRadioButton();
        teacherRB = new javax.swing.JRadioButton();
        staffRB = new javax.swing.JRadioButton();
        emailTF = new javax.swing.JTextField();
        passwordTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        loginBT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonGroup1.add(studentRB);
        studentRB.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        studentRB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atu/images/studentDesactive.png"))); // NOI18N
        studentRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentRBActionPerformed(evt);
            }
        });
        getContentPane().add(studentRB, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 270, -1, -1));

        buttonGroup1.add(teacherRB);
        teacherRB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atu/images/teacherDesactive.png"))); // NOI18N
        teacherRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacherRBActionPerformed(evt);
            }
        });
        getContentPane().add(teacherRB, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 270, -1, -1));

        buttonGroup1.add(staffRB);
        staffRB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atu/images/staffDesactive.png"))); // NOI18N
        staffRB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                staffRBMouseClicked(evt);
            }
        });
        staffRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffRBActionPerformed(evt);
            }
        });
        getContentPane().add(staffRB, new org.netbeans.lib.awtextra.AbsoluteConstraints(1500, 270, -1, -1));
        getContentPane().add(emailTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 670, 850, 40));
        getContentPane().add(passwordTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 790, 850, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atu/images/Atu_Login_Prototype.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        loginBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBTActionPerformed(evt);
            }
        });
        getContentPane().add(loginBT, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 910, 850, 70));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void studentRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentRBActionPerformed
        //change img icon when button is selected
        ImageIcon studentSelectedIcon = new ImageIcon(getClass().getResource("/atu/images/studentActive.png"));
        enabledButton(studentRB, studentSelectedIcon);
    }//GEN-LAST:event_studentRBActionPerformed
    private void teacherRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacherRBActionPerformed
        ImageIcon teacherSelectedIcon = new ImageIcon(getClass().getResource("/atu/images/teacherActive.png"));
        enabledButton(teacherRB, teacherSelectedIcon);
    }//GEN-LAST:event_teacherRBActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void staffRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffRBActionPerformed
        ImageIcon staffSelectedIcon = new ImageIcon(getClass().getResource("/atu/images/staffActive.png"));
        enabledButton(staffRB, staffSelectedIcon);
    }//GEN-LAST:event_staffRBActionPerformed

    private void staffRBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staffRBMouseClicked

    }//GEN-LAST:event_staffRBMouseClicked

    private void loginBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBTActionPerformed
        String emailInput = emailTF.getText();
        String passwordInput = passwordTF.getText(); 
        
        Object[] parameters = {emailInput, passwordInput};
        if (staffRB.isSelected() && !emailInput.equals("") && !passwordInput.equals("")) {
            //making a connection with the database
            try {
                String sql = "SELECT * FROM account WHERE  email = ? AND password = ? AND role_fk in (SELECT id FROM role WHERE name = 'Staff')";
                ArrayList<Map<String, Object>> result = ConnectionDB.getQuery(sql, parameters);
                
                if(result.size() == 1){
                   new OptionFrame().setVisible(true);
                   dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "username or password incorrect!");
                }
        
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error connection to Database");
            }
        }else if (studentRB.isSelected() && !emailInput.equals("") && !passwordInput.equals("")){
             try {
                String sql = "SELECT * FROM account WHERE  email = ? AND password = ? AND role_fk in (SELECT id FROM role WHERE name = 'Student')";
                ArrayList<Map<String, Object>> result = ConnectionDB.getQuery(sql, parameters);
                
                if(result.size() == 1){
                    int idAccount = (int)result.get(0).get("id");
                    new StudentFrame(idAccount).setVisible(true);
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "username or password incorrect!");
                }
        
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error connection to Database");
            }
        }else if (teacherRB.isSelected() && !emailInput.equals("") && !passwordInput.equals("")){
             try {
                String sql = "SELECT * FROM account WHERE email = ? AND password = ? AND role_fk in (SELECT id FROM role WHERE name = 'Teacher')";
                ArrayList<Map<String, Object>> result = ConnectionDB.getQuery(sql, parameters);
                
                if(result.size() == 1){
                    int idAccount = (int)result.get(0).get("id");
                    new TeacherFrame(idAccount).setVisible(true);
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "username or password incorrect!");
                }
        
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error connection to Database");
            }
        }
    }//GEN-LAST:event_loginBTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField emailTF;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton loginBT;
    private javax.swing.JTextField passwordTF;
    private javax.swing.JRadioButton staffRB;
    private javax.swing.JRadioButton studentRB;
    private javax.swing.JRadioButton teacherRB;
    // End of variables declaration//GEN-END:variables

    //Button icons desactivated
    private void enabledButton(JRadioButton button, ImageIcon image) {
        ImageIcon staffUnselectedIcon = new ImageIcon(getClass().getResource("/atu/images/staffDesactive.png"));
        ImageIcon studentUnselectedIcon = new ImageIcon(getClass().getResource("/atu/images/studentDesactive.png"));
        ImageIcon teacherUnselectedIcon = new ImageIcon(getClass().getResource("/atu/images/teacherDesactive.png"));

        studentRB.setIcon(studentUnselectedIcon);
        teacherRB.setIcon(teacherUnselectedIcon);
        staffRB.setIcon(staffUnselectedIcon);
        button.setIcon(image);
    }     
}
