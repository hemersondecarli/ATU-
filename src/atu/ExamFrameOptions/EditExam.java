/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package atu.ExamFrameOptions;

import atu.Class.ConnectionDB;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author alber
 */
public class EditExam extends javax.swing.JFrame {

    int idAccount;
    int idExam;
    String rol;
    private Map<String, Integer> coursesMap; //Key: "Course" Value: "ID"
    private Map<String, Integer> modulesMap; //Key: "Module" Value: "ID"
    private Map<String, List<String>> courseModuleMap; //Key "Course" Values "Modules"
    

    public EditExam(String rol, int idAccount, int idExam) {
        initComponents();
        this.rol = rol;
        this.idAccount = idAccount;
        this.idExam = idExam;
        coursesMap = new HashMap<>();
        modulesMap = new HashMap<>();
        courseModuleMap = new HashMap<>();
        loadCoursesModules();
        loadComponents();
        loadExam();
    }

    public EditExam() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nameExam = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        dateExam = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        courseSelect = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        moduleSelect = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("EDIT EXAM");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 220, 55));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Modules:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 80, 32));
        getContentPane().add(nameExam, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 490, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("Back");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, 39, 40));
        getContentPane().add(dateExam, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 510, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Name:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, -1, 32));

        getContentPane().add(courseSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 230, 490, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Exam Date:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, 32));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Courses:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 70, 32));

        getContentPane().add(moduleSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 490, 30));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton2.setText("Submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 340, 150, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        EditDeleteExam editDeleteExamPage = new EditDeleteExam(rol, idAccount);
        editDeleteExamPage.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            String name = nameExam.getText();
            Date date = dateExam.getDate();
            String course = (String)courseSelect.getSelectedItem();
            String module = (String)moduleSelect.getSelectedItem();
            if(name.isEmpty() || date == null) {
                JOptionPane.showMessageDialog(this, "All Field Required");
            }else{
                int choice = JOptionPane.showConfirmDialog(this, "Update Exam?", "Confirmation", JOptionPane.YES_NO_OPTION);
                if (choice == JOptionPane.YES_OPTION) {
                    Integer idCourse = coursesMap.get(course);
                    Integer idModule = modulesMap.get(module);
                    String sql = "SELECT * FROM course_module WHERE course_fk = ? AND module_fk = ?";
                    Object[] parametersSQL = {idCourse, idModule};
                    ArrayList<Map<String, Object>> result = ConnectionDB.getQuery(sql, parametersSQL);
                    if(result.size() > 0){
                        int id = (int)result.get(0).get("id");
                        String sql2 = "UPDATE exam set name = ?, exam_date = ?, course_module_fk = ? WHERE id = ?";
                        Object[] parametersSQL2 = {name, date, id, idExam};
                        if(ConnectionDB.insertQueryParameters(sql2, parametersSQL2) == 1){
                            JOptionPane.showMessageDialog(this, "Update Successful");
                        }else{
                            JOptionPane.showMessageDialog(this, "Update Fail");
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "Update Fail");
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditExam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditExam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditExam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditExam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditExam().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> courseSelect;
    private com.toedter.calendar.JDateChooser dateExam;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JComboBox<String> moduleSelect;
    private javax.swing.JTextField nameExam;
    // End of variables declaration//GEN-END:variables

     private void loadCoursesModules() {
        
        try {
            String sql =    "SELECT c.name as course_name, c.id as course_id, m.name as module_name, m.id as module_id FROM account a JOIN "+
                            "account_module am ON am.account_fk = a.id JOIN "+
                            "module m ON m.id = am.module_fk JOIN "+
                            "course_module cm ON cm.module_fk = m.id JOIN "+
                            "course c ON c.id = cm.course_fk "+
                            "WHERE a.id = ?";     
            Object[] parametersSQL = {idAccount};
            ArrayList<Map<String, Object>> result = ConnectionDB.getQuery(sql,parametersSQL);
            
            for (Map<String, Object> map : result) {
                String course = (String)map.get("course_name");
                Integer course_id = (Integer)map.get("course_id");
                String module = (String)map.get("module_name");
                Integer module_id = (Integer)map.get("module_id");
                boolean existCourse = coursesMap.containsKey(course);
                boolean existModule = modulesMap.containsKey(module);
                if(!existCourse){             
                    coursesMap.put(course, course_id);
                    ArrayList<String> listModule = new ArrayList<>();
                    listModule.add(module);
                    courseModuleMap.put(course, listModule);

                }else{
                    courseModuleMap.get(course).add(module);
                }
                
                if(!existModule){
                    modulesMap.put(module, module_id);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error connection to Database");
        }
    }

    private void loadComponents() {
        for (Map.Entry<String, List<String>> entry  : courseModuleMap.entrySet()) {
            courseSelect.addItem(entry.getKey());     
        }
        
        List<String> modules = courseModuleMap.get((String)courseSelect.getSelectedItem());
        moduleSelect.removeAllItems();
        for (String module : modules) {
            moduleSelect.addItem(module);
        }
        
        // Agregar un ActionListener al JComboBox
        courseSelect.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                List<String> modules = courseModuleMap.get((String)courseSelect.getSelectedItem());
                moduleSelect.removeAllItems();
                for (String module : modules) {
                    moduleSelect.addItem(module);
                }
            }
        });
    }

    private void loadExam() {
        try {
            String sql =    "SELECT e.name, e.exam_date, c.name as name_course, m.name as name_module FROM Exam e JOIN "+
                            "course_module cm ON cm.id = e.course_module_fk JOIN "+
                            "course c ON c.id = cm.course_fk JOIN "+
                            "module m ON m.id = cm.module_fk "+
                            "WHERE e.id = ?";  
            Object[] parameters = {idExam};
            ArrayList<Map<String, Object>> result = ConnectionDB.getQuery(sql, parameters);
            for (Map<String, Object> map : result) {
                nameExam.setText((String)map.get("name"));
                dateExam.setDate(Date.from(((LocalDateTime)map.get("exam_date")).atZone(ZoneId.systemDefault()).toInstant()));
                courseSelect.setSelectedItem((String)map.get("name_course"));
                moduleSelect.setSelectedItem((String)map.get("name_module"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error connection to Database");
        }
    }
    
    
}
